{"version":3,"sources":["Components/UserContext.js","Components/Option/Option.jsx","Components/Form/Form.jsx","Components/TableRow/TableRow.jsx","Components/Table/Table.jsx","Components/App/App.js","serviceWorker.js","index.js"],"names":["UserContext","createContext","UserProvider","props","useState","country","setCountry","flag","callingCodes","currentCountry","setCurrent","number","name","email","phone","age","gender","form","setForm","last","currentForm","setCurrentForm","sort","setSort","Provider","value","Country","ChosenCountry","userForm","CurrentForm","Sort","children","Option","useContext","useEffect","a","fetch","response","json","data","getCountries","Fragment","map","count","key","href","className","onClick","CountryHandler","src","Form","handleChange","e","target","Bdate","document","getElementById","Bday","Date","birthday","parseInt","now","length","onSubmit","preventDefault","htmlFor","type","id","placeholder","onChange","required","for","data-toggle","style","borderLeft","checked","TableRow","b","user","scope","aria-label","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","newUsers","filter","item","aria-hidden","Table","backgroundColor","color","cursor","faArrowDown","faArrowUp","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cd12b435.chunk.js","sourcesContent":["import React, { useState, createContext } from 'react';\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport const UserProvider = (props) => {\r\n  const [country, setCountry] = useState([]);\r\n  const [currentCountry, setCurrent] = useState([\r\n    {\r\n      flag: 'https://restcountries.eu/data/arm.svg',\r\n      callingCodes: 374,\r\n    },\r\n  ]);\r\n\r\n  const [form, setForm] = useState([\r\n    {\r\n      number: 1,\r\n      name: 'Ralph Hovsepian',\r\n      email: 'ralphhossepian@gmail.com',\r\n      phone: '37444309088',\r\n      age: 19,\r\n      gender: 'male',\r\n    },\r\n  ]);\r\n\r\n  const [currentForm, setCurrentForm] = useState({\r\n    name: '',\r\n    last: '',\r\n    email: '',\r\n    phone: '374',\r\n    age: '',\r\n    gender: '',\r\n  });\r\n\r\n  const [sort, setSort] = useState('');\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        Country: [country, setCountry],\r\n        ChosenCountry: [currentCountry, setCurrent],\r\n        userForm: [form, setForm],\r\n        CurrentForm: [currentForm, setCurrentForm],\r\n        Sort: [sort, setSort],\r\n      }}\r\n    >\r\n      {props.children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n","import React, { useEffect, useContext } from 'react';\r\nimport { UserContext } from '../UserContext';\r\nimport './Option.css';\r\nexport default function Option() {\r\n  const { Country, ChosenCountry, CurrentForm } = useContext(UserContext);\r\n  const [country, setCountry] = Country;\r\n  const [currentCountry, setCurrent] = ChosenCountry;\r\n  const [currentForm, setCurrentForm] = CurrentForm;\r\n  useEffect(() => {\r\n    const getCountries = async () => {\r\n      const response = await fetch('https://restcountries.eu/rest/v2/all');\r\n      const data = await response.json();\r\n      setCountry(data);\r\n    };\r\n\r\n    getCountries();\r\n  }, []);\r\n\r\n  const CountryHandler = (country) => {\r\n    setCurrent([country]);\r\n\r\n    setCurrentForm({\r\n      ...currentForm,\r\n      phone: country.callingCodes,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {country.map((count, key) => {\r\n        return (\r\n          <a\r\n            key={key}\r\n            href='#'\r\n            className='dropdown-item'\r\n            onClick={() => {\r\n              CountryHandler(count);\r\n            }}\r\n            value={count.name}\r\n          >\r\n            <img src={count.flag} className='img-responsive' />\r\n            {count.name}\r\n          </a>\r\n        );\r\n      })}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect, useContext } from 'react';\r\nimport './Form.css';\r\nimport Option from '../Option/Option';\r\n\r\nimport { UserContext } from '../UserContext';\r\nexport default function Form() {\r\n  const { ChosenCountry, userForm, CurrentForm } = useContext(UserContext);\r\n  const [currentCountry, setCurrent] = ChosenCountry;\r\n\r\n  const [form, setForm] = userForm;\r\n  const [currentForm, setCurrentForm] = CurrentForm;\r\n\r\n  const handleChange = (e) => {\r\n    const value = e.target.value;\r\n    const Bdate = document.getElementById('birthdate').value;\r\n    let Bday = +new Date(Bdate);\r\n    let birthday = parseInt((Date.now() - Bday) / 31557600000);\r\n\r\n    setCurrentForm({\r\n      ...currentForm,\r\n      [e.target.name]: value,\r\n      number: form.length + 1,\r\n      age: birthday,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setCurrentForm('');\r\n    setForm([...form, currentForm]);\r\n  };\r\n\r\n  return (\r\n    <div className='Form'>\r\n      <h4 className='text-muted'>Registration Form</h4>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor='Name'>Name</label>\r\n        <div className='form-row'>\r\n          <div className='form-group col-md-6'>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              id='Name'\r\n              name='name'\r\n              placeholder='First'\r\n              name='name'\r\n              value={currentForm.name || ''}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className='form-group col-md-6'>\r\n            <input\r\n              type='text'\r\n              id='Last'\r\n              className='form-control'\r\n              placeholder='Last'\r\n              name='last'\r\n              value={currentForm.last || ''}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='form-group'>\r\n          <label for='Email'>Email</label>\r\n          <input\r\n            type='email'\r\n            className='form-control'\r\n            id='Email'\r\n            name='email'\r\n            value={currentForm.email || ''}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className='input-group'>\r\n          <div className='input-group-prepend'>\r\n            <button\r\n              id='chooseCountry'\r\n              type='button'\r\n              className='btn btn-outline-secondary dropdown-toggle'\r\n              data-toggle='dropdown'\r\n            >\r\n              <img src={currentCountry[0].flag} />\r\n            </button>\r\n            <div className='dropdown-menu'>\r\n              <Option />\r\n            </div>\r\n          </div>\r\n          <input\r\n            type='number'\r\n            className='form-control'\r\n            style={{ borderLeft: 0 }}\r\n            id='Number'\r\n            name='phone'\r\n            value={currentForm.phone || ''}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <br />\r\n        <div className='form-group'>\r\n          <label for='birthdate'>Birth Date</label>\r\n          <input\r\n            type='date'\r\n            className='form-control'\r\n            id='birthdate'\r\n            placeholder='mm / dd / yyyy'\r\n            name='birth'\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <label htmlFor='check'>Gender</label>\r\n        <fieldset className='form-group' id='check'>\r\n          <div className='row'>\r\n            <div className='col-sm-10'>\r\n              <div className='form-check'>\r\n                <input\r\n                  className='form-check-input'\r\n                  type='radio'\r\n                  name='gender'\r\n                  id='gridRadios1'\r\n                  value='male'\r\n                  checked={currentForm.gender === 'male'}\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n                <label className='form-check-label' for='gridRadios1'>\r\n                  Male\r\n                </label>\r\n              </div>\r\n              <div className='form-check'>\r\n                <input\r\n                  className='form-check-input'\r\n                  type='radio'\r\n                  name='gender'\r\n                  id='gridRadios2'\r\n                  value='female'\r\n                  checked={currentForm.gender === 'female'}\r\n                  onChange={handleChange}\r\n                />\r\n                <label className='form-check-label' for='gridRadios2'>\r\n                  Female\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </fieldset>\r\n        <br />\r\n        <button type='submit' className='btn btn-primary btn-sm btn-block'>\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useContext } from 'react';\r\nimport './TableRow.css';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { UserContext } from '../UserContext';\r\nexport default function TableRow() {\r\n  const { userForm, ChosenCountry, Sort } = useContext(UserContext);\r\n  const [form, setForm] = userForm;\r\n  const [sort, setSort] = Sort;\r\n\r\n  const handleDelete = (id) => {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"You won't be able to revert this!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        let newUsers = form.filter((item) => item.number !== id);\r\n        setForm(newUsers);\r\n\r\n        Swal.fire('Deleted!', 'The user has been deleted.', 'success');\r\n      }\r\n    });\r\n  };\r\n\r\n  const youngToOld = (a, b) => {\r\n    return a.age - b.age;\r\n  };\r\n\r\n  const oldToYoung = (a, b) => {\r\n    return b.age - a.age;\r\n  };\r\n  const sortBy =\r\n    sort == 'young'\r\n      ? form.sort(youngToOld)\r\n      : sort == ''\r\n      ? form\r\n      : form.sort(oldToYoung);\r\n  return sortBy.map((user, key) => {\r\n    return (\r\n      <tr key={key}>\r\n        <th scope='row'>{user.number}</th>\r\n        <td>{user.name}</td>\r\n        <td>{user.email}</td>\r\n        <td>+{user.phone}</td>\r\n        <td>{user.age}</td>\r\n        <td>{user.gender}</td>\r\n        <td>\r\n          <button\r\n            type='button'\r\n            className='close'\r\n            aria-label='Close'\r\n            onClick={() => {\r\n              handleDelete(user.number);\r\n            }}\r\n          >\r\n            <span aria-hidden='true'>&times;</span>\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  });\r\n}\r\n","import React, { useEffect, useContext } from 'react';\r\nimport './Table.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowDown, faArrowUp } from '@fortawesome/free-solid-svg-icons';\r\nimport { UserContext } from '../UserContext';\r\nimport TableRow from '../TableRow/TableRow';\r\nexport default function Table() {\r\n  const { Sort } = useContext(UserContext);\r\n  const [sort, setSort] = Sort;\r\n\r\n  const handleSort = () => {\r\n    if (sort == 'young') {\r\n      setSort('old');\r\n    } else if (sort == 'old' || sort == '') {\r\n      setSort('young');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='Table'>\r\n      <h2>Table</h2>\r\n\r\n      <table className='table'>\r\n        <thead>\r\n          <tr style={{ backgroundColor: '#F5F5F5' }}>\r\n            <th scope='col'></th>\r\n            <th scope='col'>Full Name</th>\r\n            <th scope='col'>Email</th>\r\n            <th scope='col'>Phone Number</th>\r\n            <th scope='col'>\r\n              Age &nbsp;\r\n              <span\r\n                onClick={handleSort}\r\n                style={{ color: '#758690', cursor: 'pointer' }}\r\n              >\r\n                {sort == 'old' || sort == '' ? (\r\n                  <FontAwesomeIcon icon={faArrowDown} />\r\n                ) : (\r\n                  <FontAwesomeIcon icon={faArrowUp} />\r\n                )}\r\n              </span>\r\n            </th>\r\n            <th scope='col'>Gender</th>\r\n            <th scope='col'></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <TableRow />\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useContext } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { UserProvider, UserContext } from '../UserContext';\nimport Form from '../Form/Form';\nimport Table from '../Table/Table';\nfunction App() {\n  return (\n    <UserProvider>\n      <div className='App'>\n        <h2>Form</h2>\n        <Form />\n        <Table />\n      </div>\n    </UserProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './Components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}